global
    daemon
    log stdout local0 info
    stats socket /tmp/haproxy.sock mode 660 level admin
    stats timeout 30s

    # SSL Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

# HAProxy Stats
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats hide-version
    stats admin if TRUE

# HTTP to HTTPS Redirect
frontend http_frontend
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS Frontend
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/portal.pem
    
    # Add security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    
    # ACLs for routing
    acl is_api path_beg /api
    acl is_management_api path_beg /recreate/ path -i /reonboard path -i /states
    acl is_keycloak path_beg /auth
    acl is_realms path_beg /realms
    acl is_prometheus path_beg /prometheus
    
    # Route to backends
    use_backend experience_api_backend if is_api
    use_backend management_api_backend if is_management_api
    use_backend keycloak_backend if is_keycloak
    use_backend keycloak_backend if is_realms
    use_backend prometheus_backend if is_prometheus
    default_backend frontend_backend

# Backend Definitions
backend frontend_backend
    balance roundrobin
    option httpchk GET /
    http-request set-header X-Forwarded-Proto https
    server frontend1 frontend:8080 check

backend experience_api_backend
    balance roundrobin
    option httpchk GET /health
    http-request set-header X-Forwarded-Proto https
    # Remove /api prefix when forwarding to backend
    http-request replace-path /api/(.*) /\1
    server experience_api1 experience-api:3000 check

backend management_api_backend
    balance roundrobin
    option httpchk GET /health
    http-request set-header X-Forwarded-Proto https
    # No path rewrite needed; forward as-is
    server management_api1 management-api:9000 check

backend keycloak_backend
    balance roundrobin
    http-request set-header X-Forwarded-Proto https
    server keycloak1 keycloak:8080 check

backend prometheus_backend
    balance roundrobin
    option httpchk GET /-/healthy
    http-request set-header X-Forwarded-Proto https
    # Remove /prometheus prefix when forwarding to backend
    http-request replace-path /prometheus/(.*) /\1
    server prometheus1 prometheus:9090 check
