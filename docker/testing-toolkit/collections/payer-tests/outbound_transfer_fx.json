{
  "options": {},
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "Outbound transfer currency conversion",
      "fileInfo": {
        "path": "outbound_transfers_2.0.json"
      },
      "meta": {
        "info": "Outbound Transfer Fx conversion"
      },
      "requests": [
        {
          "id": 1,
          "description": "Initiate a request",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets",
            "asynchronous": false,
            "specFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/trigger_templates"
          },
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "url": "http://sdk-scheme-adapter:4001",
          "body": {
            "homeTransactionId": "1234",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "16135551001",
              "displayName": "string",
              "firstName": "Henrik",
              "middleName": "Johannes",
              "lastName": "Karlsson",
              "dateOfBirth": "1966-06-16",
              "fspId": "dfsp1"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "16135551002",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "EUR",
            "amount": "10",
            "transactionType": "TRANSFER",
            "note": "Note sent to Payee.",
            "skipPartyLookup": false
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Current state should be WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "Accept Party",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets",
            "asynchronous": false,
            "specFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/trigger_templates"
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.1.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.1.response.body.transferId}"
          },
          "body": {
            "acceptParty": true
          },
          "url": "http://sdk-scheme-adapter:4001",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Current state should be WAITING_FOR_CONVERSION_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_CONVERSION_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "description": "Accept Currency Conversion",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets",
            "asynchronous": false,
            "specFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/trigger_templates"
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.1.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.1.response.body.transferId}"
          },
          "body": {
            "acceptConversion": true
          },
          "url": "http://sdk-scheme-adapter:4001",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Current state should be WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": 4,
          "description": "Accept Quotes",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets",
            "asynchronous": false,
            "specFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-outbound-v2_1_0-openapi3-snippets_2.1/trigger_templates"
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.1.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.1.response.body.transferId}"
          },
          "body": {
            "acceptQuote": true
          },
          "url": "http://sdk-scheme-adapter:4001",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Current state should be COMPLETED",
                "exec": [
                  "expect(response.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}
